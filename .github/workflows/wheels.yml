name: Build

on: [push, pull_request]

jobs:
  build_wheels:
    env:
      CIBW_ENVIRONMENT: "CMAKE_GENERATOR='Ninja' GNUMAKEFLAGS=-j4 CUDA_PATH=/usr/local/cuda"
      CIBW_BUILD_VERBOSITY: 3
    strategy:
      matrix:
        include:
           - runs-on: ubuntu-latest
             cibw-arch: manylinux_x86_64
           - runs-on: ubuntu-latest
             cibw-arch: manylinux_aarch64
           - runs-on: macos-latest
             cibw-arch: macosx_x86_64
           - runs-on: macos-latest
             cibw-arch: macosx_arm64
    name: Wheels â€¢ ${{ matrix.cibw-arch }}
    runs-on: ${{ matrix.runs-on }}

    steps:
      - uses: actions/checkout@v2
        with:
          submodules: true

      - uses: actions/setup-python@v2

      - name: Package source distribution
        if: runner.os == 'Linux'
        run: |
          python setup.py sdist -d wheelhouse --formats=gztar 

      - name: Configure cibuildwheel
        shell: bash
        run: |
            CMAKE_OSX_ARCHITECTURES=${{ matrix.cibw-arch == 'macosx_x86_64' && 'x86_64' || matrix.cibw-arch == 'macosx_arm64' && 'arm64' || matrix.cibw-arch == 'macosx_universal2' && '"arm64;x86_64"' || '' }}
            echo "CIBW_SKIP=\"pp* cp36-*\"" >> $GITHUB_ENV
            echo "CIBW_ARCHS_LINUX=x86_64 aarch64" >> $GITHUB_ENV
            echo "CIBW_ARCHS_MACOS=x86_64 arm64" >> $GITHUB_ENV
            echo "CIBW_BUILD=*-${{ matrix.cibw-arch }}" >> $GITHUB_ENV
            echo "CIBW_ENVIRONMENT_MACOS=CMAKE_OSX_ARCHITECTURES=\"$CMAKE_OSX_ARCHITECTURES\"" >> $GITHUB_ENV

      - name: Set up QEMU
        if: runner.os == 'Linux'
        uses: docker/setup-qemu-action@v1
        with:
          platforms: all

      - name: Build wheels
        uses: pypa/cibuildwheel@v2.11.4
        env:
          CIBW_BEFORE_BUILD: pip install ninja
          # TODO re-enable when backend is cleaned up
          #CIBW_BEFORE_ALL_LINUX: sh install_cuda.sh

      - uses: actions/upload-artifact@v2
        with:
          path: ./wheelhouse/*.whl
